---
layout: essay
type: essay
title: " What is AI? and How Did I Use It?  "
# All dates must be YYYY-MM-DD format!
date: 2024-02-06
published: true
labels:
  - Coding-Standards
  - Java-Script
  - ESLint
---
<img width="300px" class="rounded float-start pe-4" src="../img/code1.jpeg">

## I. Introduction

Artificial Intelligence (AI) has become integral to modern education, offering innovative solutions to enhance learning experiences. In the realm of Software Engineering education, AI plays a vital role, providing tools and assistance to navigate complex problems and deepen understanding. Throughout ICS 314, AI tools such as ChatGPT and Co-Pilot have been instrumental in supporting my academic journey.

## II. Personal Experience with AI

In ICS 314, AI has been omnipresent across various course elements. For instance, during Experience WODs, I heavily relied on ChatGPT to generate code snippets and clarify concepts. However, as tasks grew more complex, AI-generated solutions often required extensive refinement to align with specific requirements.

While AI tools provided valuable suggestions and insights, integrating and interpreting AI-generated solutions occasionally presented me with obstacles, demanding additional effort for validation and refinement. One notable instance was during the development of a "remove" function for our final project. The task involved implementing a feature where clicking the "remove" button on a vendor card would delete it from the Mongo collection, thereby removing it from the page. When seeking assistance from ChatGPT, I found myself navigating through various codes and methods suggested by the AI, all of which proved ineffective. Consequently, I opted to rely on our course modules as a guide instead. This approach allowed me to devise a simpler method, requiring only a few lines of code, thus circumventing the complexities encountered with AI assistance.

## III. Impact on Learning and Understanding

The incorporation of AI has significantly influenced my learning experience. While AI has provided alternative pathways for comprehension and facilitated skill development, challenges in interpretation and integration have occasionally hindered understanding. Overall, AI technologies have both enhanced and challenged my understanding of software engineering concepts.

## IV. Practical Applications

Beyond ICS 314, AI is extensively applied in real-world projects, including within the aviation industry. For instance, Hawaiian Airlines employs AI to optimize various aspects of airline operations, such as flight scheduling, route planning, and crew management. Furthermore, AI-powered customer service solutions, such as chatbots and virtual assistants, streamline communication processes and improve overall customer satisfaction. These practical applications of AI effectively address real-world software engineering challenges within the aviation sector.

## V. Challenges and Opportunities

In our practice WODs, I faced numerous challenges with AI, particularly when tasked with replicating websites. The AI software often struggles to comprehend the visual aspects of the website, resulting in inaccurate or unwanted code generation. This limitation significantly hindered the effectiveness of using AI for such tasks, as it couldn't accurately interpret the design elements and layout of the website. As a result, relying solely on AI for website replication proved impractical and often led to suboptimal outcomes.

Despite these challenges, they present valuable opportunities for further integration of AI in software engineering education. By refining AI models to better understand visual elements and integrating feedback mechanisms, we can enhance the effectiveness of AI in replicating website designs accurately. Additionally, providing AI with clearer instructions and context about the website structure and design can help overcome these challenges and promote more precise code generation. Ultimately, addressing these challenges can lead to improved learning experiences, better catering to individual student needs, and facilitating skill development in software engineering education.

## VI. Comparative Analysis

In comparing traditional teaching methods with AI-enhanced approaches, it becomes evident that while AI offers alternative pathways for comprehension and aids in skill development, it may not always match the effectiveness of hands-on practical training facilitated by a teacher. Traditional teaching methods often prioritize direct interaction between students and instructors, allowing for immediate feedback, personalized guidance, and tailored instruction based on individual learning styles. This hands-on approach fosters deeper understanding and better retention of skills.

On the other hand, AI-enhanced approaches provide additional resources and support, offering alternative pathways for learning and problem-solving. AI tools can generate solutions, provide explanations, and offer assistance, supplementing traditional teaching methods. However, challenges in the interpretation and integration of AI-generated solutions may hinder understanding, especially in complex scenarios.

Despite these challenges, AI-driven solutions demonstrate effectiveness in addressing real-world software engineering challenges. AI can analyze large datasets, identify patterns, and automate repetitive tasks, thereby improving efficiency and productivity in software development processes. While traditional teaching methods excel in fostering hands-on practical training and skill retention, AI-driven solutions offer valuable support and augmentation in addressing real-world challenges. Therefore, a balanced approach that combines the strengths of both traditional teaching methods and AI-enhanced approaches may yield optimal results in software engineering education.

## VII. Future Considerations

The future of AI in software engineering education holds immense potential for revolutionizing learning experiences, workflow optimization, and preparation for real-world challenges. Advancements in AI technology promise to provide students with personalized learning experiences, adaptive feedback mechanisms, and access to vast repositories of knowledge and resources. By leveraging AI-driven tools and platforms, educators can streamline curriculum delivery, facilitate collaborative learning environments, and equip students with the skills and competencies needed to thrive in the software engineering industry.

However, it's crucial to recognize the inherent challenges and risks associated with the widespread integration of AI in education. Ensuring the precision and accuracy of AI algorithms remains paramount to prevent misinformation and erroneous guidance. Moreover, maintaining human oversight and critical thinking skills is essential to prevent overreliance on AI-generated solutions and preserve the integrity of the learning process.

While AI undoubtedly offers immense potential as a powerful tool in software engineering education, it's essential to approach its integration with caution and mindfulness. Ultimately, AI should serve as an aid to educators and students, complementing traditional teaching methods rather than replacing human expertise and judgment. As we navigate the evolving landscape of AI in education, it's imperative to strike a balance between harnessing its capabilities and mitigating potential risks, ensuring that it remains a beneficial asset in shaping the future of software engineering education.

## VIII. Conclusion

In conclusion, the integration of Artificial Intelligence (AI) into software engineering education represents both a transformative opportunity and a complex challenge. Throughout the course of ICS 314, AI tools such as ChatGPT and Co-Pilot have played a crucial role in supporting learning experiences, providing alternative pathways for comprehension, and facilitating skill development. However, challenges in interpretation and integration have occasionally hindered understanding, emphasizing the need for a balanced approach that combines the strengths of both traditional teaching methods and AI-enhanced approaches.

Looking ahead, the future of AI in software engineering education holds immense potential for revolutionizing learning experiences, workflow optimization, and preparation for real-world challenges. Advancements in AI technology promise to provide personalized learning experiences, adaptive feedback mechanisms, and access to vast repositories of knowledge and resources. Yet, it's crucial to recognize the inherent challenges and risks associated with the widespread integration of AI in education, including ensuring precision and accuracy, and maintaining human oversight and critical thinking skills.

In navigating the evolving landscape of AI in education, it's essential to approach its integration with caution and mindfulness. AI should serve as an aid to educators and students, complementing traditional teaching methods rather than replacing human expertise and judgment. By striking a balance between harnessing AI's capabilities and mitigating potential risks, we can ensure that it remains a beneficial asset in shaping the future of software engineering education. Ultimately, the successful integration of AI in education will depend on our ability to leverage its strengths while preserving the integrity and effectiveness of traditional teaching methods.



<hr>

###### Note: ChatGPT assisted in writing this essay with sentence structure and grammar.
